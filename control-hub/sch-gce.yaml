---
image:
  repository: streamsets/control-hub
  tag: 3.7.0
  pullPolicy: Always
ingress:
  enabled: false
  proto: http
  # Used to create an Ingress record.
  domain: <yourdomain>
  host: <yourhost>
  externalPort: 80
  annotations:
    # kubernetes.io/ingress.class: traefik
istio:
  enabled: true
  mTLS: PERMISSIVE

adminPassword: streamSets123
schInfluxPassword: streamSets123

common:
  env: &COMMON_ENV
    DPM_CONF_MAIL_TRANSPORT_PROTOCOL: smtp
    DPM_CONF_MAIL_SMTP_HOST:
    DPM_CONF_MAIL_SMTP_PORT: 587
    DPM_CONF_MAIL_SMTP_STARTTLS_ENABLE: true
    DPM_CONF_MAIL_SMTP_AUTH: true
    DPM_CONF_MAIL_SMTPS_HOST:
    DPM_CONF_MAIL_SMTPS_PORT: 465
    DPM_CONF_MAIL_SMTPS_AUTH: true
    DPM_CONF_XMAIL_USERNAME:
    DPM_CONF_XMAIL_PASSWORD:
    DPM_CONF_XMAIL_FROM_ADDRESS:

appProto: http
apps:
- name: security
  deployment: security
- name: pipelinestore
  deployment: pipelinestore
- name: messaging
  deployment: messaging
- name: jobrunner
  deployment: jobrunner
- name: timeseries
  deployment: timeseries
- name: topology
  deployment: topology
- name: notification
  deployment: notification
- name: sla
  deployment: sla
- name: policy
  deployment: policy
- name: provisioning
  deployment: provisioning
- name: scheduler
  deployment: scheduler
- name: sdp_classification
  deployment: sdp_classification
- name: reporting
  deployment: reporting

deployments:
- name: security
  appsToStart: "security"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: pipelinestore
  appsToStart: "pipelinestore"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: messaging
  appsToStart: "messaging"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: jobrunner
  appsToStart: "jobrunner"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: timeseries
  appsToStart: "timeseries"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: topology
  appsToStart: "topology"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: notification
  appsToStart: "notification"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: sla
  appsToStart: "sla"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: policy
  appsToStart: "policy"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: provisioning
  appsToStart: "provisioning"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: sdp_classification
  appsToStart: "sdp_classification"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: scheduler
  appsToStart: "scheduler"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV
- name: reporting
  appsToStart: "reporting"
  replicaCount: 1
  container:
    env:
      <<: *COMMON_ENV

mysql:
  imageTag: 5.7
  mysqlRootPassword: streamSets123
  mysqlPassword: streamSets123
  podAnnotations:
    sidecar.istio.io/inject: "false"
